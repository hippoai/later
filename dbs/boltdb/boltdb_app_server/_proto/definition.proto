syntax = "proto3";

package hippoai.later.bolt;

option go_package = "github.com/hippoai/later/dbs/boltdb/boltdb_app_server/_proto";

import "google/api/annotations.proto";

service LaterBoltDB {
  rpc AbortInstance(AbortInstanceInput) returns (AbortInstanceOutput) {
    option (google.api.http) = {
      post: "/abort_instance"
      body: "*"
    };
  };
  rpc CreateInstance(CreateInstanceInput) returns (CreateInstanceOutput) {
    option (google.api.http) = {
      post: "/create_instance"
      body: "*"
    };
  };
  rpc GetInstances(GetInstancesInput) returns (GetInstancesOutput) {
    option (google.api.http) = {
      post: "/get_instances"
      body: "*"
    };
  };
  rpc GetAborted(GetInstancesInput) returns (GetInstancesOutput) {
    option (google.api.http) = {
      post: "/get_aborted"
      body: "*"
    };
  };
  rpc GetSuccessful(GetInstancesInput) returns (GetInstancesOutput) {
    option (google.api.http) = {
      post: "/get_successful"
      body: "*"
    };
  };
  rpc GetFailed(GetInstancesInput) returns (GetInstancesOutput) {
    option (google.api.http) = {
      post: "/get_failed"
      body: "*"
    };
  };
  rpc MarkAsSuccessful(MarkAsSuccessfulInput) returns (MarkAsSuccessfulOutput) {
    option (google.api.http) = {
      post: "/mark_as_successful"
      body: "*"
    };
  };
  rpc MarkAsFailed(MarkAsFailedInput) returns (MarkAsFailedOutput) {
    option (google.api.http) = {
      post: "/mark_as_failed"
      body: "*"
    };
  };
}

message Instance {
  string id = 1;
  string task_name = 2;
  string execution_time = 3;
  bytes parameters = 4;
};

message WrappedTime {
  string time = 1;
};

message AbortInstanceInput {
  string instance_id = 1;
};

message AbortInstanceOutput {
};

message CreateInstanceInput {
  string task_name = 1;
  string execution_time = 2;
  bytes parameters = 3;
};

message CreateInstanceOutput {
  string instance_id = 1;
};

message GetInstancesInput {
  string start = 1;
  string end = 2;
};

message GetInstancesOutput {
  repeated Instance instances = 1;
};

message MarkAsSuccessfulInput {
  string instance_id = 1;
};

message MarkAsSuccessfulOutput{
};

message MarkAsFailedInput {
  string instance_id = 1;
};

message MarkAsFailedOutput{
};
