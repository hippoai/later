// Code generated by protoc-gen-go. DO NOT EDIT.
// source: definition.proto

/*
Package _proto is a generated protocol buffer package.

It is generated from these files:
	definition.proto

It has these top-level messages:
	Instance
	WrappedTime
	AbortInstanceInput
	AbortInstanceOutput
	CreateInstanceInput
	CreateInstanceOutput
	GetInstancesInput
	GetInstancesOutput
	GetLastPullTimeInput
	GetLastPullTimeOutput
	MarkAsSuccessfulInput
	MarkAsSuccessfulOutput
	MarkAsFailedInput
	MarkAsFailedOutput
	SetPullTimeInput
	SetPullTimeOutput
*/
package _proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Instance struct {
	Id            string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TaskName      string `protobuf:"bytes,2,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	ExecutionTime string `protobuf:"bytes,3,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	Parameters    []byte `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *Instance) GetExecutionTime() string {
	if m != nil {
		return m.ExecutionTime
	}
	return ""
}

func (m *Instance) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type WrappedTime struct {
	Time string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
}

func (m *WrappedTime) Reset()                    { *m = WrappedTime{} }
func (m *WrappedTime) String() string            { return proto.CompactTextString(m) }
func (*WrappedTime) ProtoMessage()               {}
func (*WrappedTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WrappedTime) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type AbortInstanceInput struct {
	TaskName   string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
}

func (m *AbortInstanceInput) Reset()                    { *m = AbortInstanceInput{} }
func (m *AbortInstanceInput) String() string            { return proto.CompactTextString(m) }
func (*AbortInstanceInput) ProtoMessage()               {}
func (*AbortInstanceInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AbortInstanceInput) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *AbortInstanceInput) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type AbortInstanceOutput struct {
}

func (m *AbortInstanceOutput) Reset()                    { *m = AbortInstanceOutput{} }
func (m *AbortInstanceOutput) String() string            { return proto.CompactTextString(m) }
func (*AbortInstanceOutput) ProtoMessage()               {}
func (*AbortInstanceOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CreateInstanceInput struct {
	TaskName      string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	ExecutionTime string `protobuf:"bytes,2,opt,name=execution_time,json=executionTime" json:"execution_time,omitempty"`
	Parameters    []byte `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (m *CreateInstanceInput) Reset()                    { *m = CreateInstanceInput{} }
func (m *CreateInstanceInput) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceInput) ProtoMessage()               {}
func (*CreateInstanceInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateInstanceInput) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *CreateInstanceInput) GetExecutionTime() string {
	if m != nil {
		return m.ExecutionTime
	}
	return ""
}

func (m *CreateInstanceInput) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type CreateInstanceOutput struct {
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
}

func (m *CreateInstanceOutput) Reset()                    { *m = CreateInstanceOutput{} }
func (m *CreateInstanceOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateInstanceOutput) ProtoMessage()               {}
func (*CreateInstanceOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateInstanceOutput) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type GetInstancesInput struct {
	Start string `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *GetInstancesInput) Reset()                    { *m = GetInstancesInput{} }
func (m *GetInstancesInput) String() string            { return proto.CompactTextString(m) }
func (*GetInstancesInput) ProtoMessage()               {}
func (*GetInstancesInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetInstancesInput) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetInstancesInput) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type GetInstancesOutput struct {
	Instances []*Instance `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
}

func (m *GetInstancesOutput) Reset()                    { *m = GetInstancesOutput{} }
func (m *GetInstancesOutput) String() string            { return proto.CompactTextString(m) }
func (*GetInstancesOutput) ProtoMessage()               {}
func (*GetInstancesOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetInstancesOutput) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

type GetLastPullTimeInput struct {
}

func (m *GetLastPullTimeInput) Reset()                    { *m = GetLastPullTimeInput{} }
func (m *GetLastPullTimeInput) String() string            { return proto.CompactTextString(m) }
func (*GetLastPullTimeInput) ProtoMessage()               {}
func (*GetLastPullTimeInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetLastPullTimeOutput struct {
	Time *WrappedTime `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
}

func (m *GetLastPullTimeOutput) Reset()                    { *m = GetLastPullTimeOutput{} }
func (m *GetLastPullTimeOutput) String() string            { return proto.CompactTextString(m) }
func (*GetLastPullTimeOutput) ProtoMessage()               {}
func (*GetLastPullTimeOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetLastPullTimeOutput) GetTime() *WrappedTime {
	if m != nil {
		return m.Time
	}
	return nil
}

type MarkAsSuccessfulInput struct {
	TaskName   string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
}

func (m *MarkAsSuccessfulInput) Reset()                    { *m = MarkAsSuccessfulInput{} }
func (m *MarkAsSuccessfulInput) String() string            { return proto.CompactTextString(m) }
func (*MarkAsSuccessfulInput) ProtoMessage()               {}
func (*MarkAsSuccessfulInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MarkAsSuccessfulInput) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *MarkAsSuccessfulInput) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type MarkAsSuccessfulOutput struct {
}

func (m *MarkAsSuccessfulOutput) Reset()                    { *m = MarkAsSuccessfulOutput{} }
func (m *MarkAsSuccessfulOutput) String() string            { return proto.CompactTextString(m) }
func (*MarkAsSuccessfulOutput) ProtoMessage()               {}
func (*MarkAsSuccessfulOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type MarkAsFailedInput struct {
	TaskName   string `protobuf:"bytes,1,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
}

func (m *MarkAsFailedInput) Reset()                    { *m = MarkAsFailedInput{} }
func (m *MarkAsFailedInput) String() string            { return proto.CompactTextString(m) }
func (*MarkAsFailedInput) ProtoMessage()               {}
func (*MarkAsFailedInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MarkAsFailedInput) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *MarkAsFailedInput) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type MarkAsFailedOutput struct {
}

func (m *MarkAsFailedOutput) Reset()                    { *m = MarkAsFailedOutput{} }
func (m *MarkAsFailedOutput) String() string            { return proto.CompactTextString(m) }
func (*MarkAsFailedOutput) ProtoMessage()               {}
func (*MarkAsFailedOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type SetPullTimeInput struct {
	Time string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
}

func (m *SetPullTimeInput) Reset()                    { *m = SetPullTimeInput{} }
func (m *SetPullTimeInput) String() string            { return proto.CompactTextString(m) }
func (*SetPullTimeInput) ProtoMessage()               {}
func (*SetPullTimeInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SetPullTimeInput) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type SetPullTimeOutput struct {
}

func (m *SetPullTimeOutput) Reset()                    { *m = SetPullTimeOutput{} }
func (m *SetPullTimeOutput) String() string            { return proto.CompactTextString(m) }
func (*SetPullTimeOutput) ProtoMessage()               {}
func (*SetPullTimeOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func init() {
	proto.RegisterType((*Instance)(nil), "hippoai.later.bolt.Instance")
	proto.RegisterType((*WrappedTime)(nil), "hippoai.later.bolt.WrappedTime")
	proto.RegisterType((*AbortInstanceInput)(nil), "hippoai.later.bolt.AbortInstanceInput")
	proto.RegisterType((*AbortInstanceOutput)(nil), "hippoai.later.bolt.AbortInstanceOutput")
	proto.RegisterType((*CreateInstanceInput)(nil), "hippoai.later.bolt.CreateInstanceInput")
	proto.RegisterType((*CreateInstanceOutput)(nil), "hippoai.later.bolt.CreateInstanceOutput")
	proto.RegisterType((*GetInstancesInput)(nil), "hippoai.later.bolt.GetInstancesInput")
	proto.RegisterType((*GetInstancesOutput)(nil), "hippoai.later.bolt.GetInstancesOutput")
	proto.RegisterType((*GetLastPullTimeInput)(nil), "hippoai.later.bolt.GetLastPullTimeInput")
	proto.RegisterType((*GetLastPullTimeOutput)(nil), "hippoai.later.bolt.GetLastPullTimeOutput")
	proto.RegisterType((*MarkAsSuccessfulInput)(nil), "hippoai.later.bolt.MarkAsSuccessfulInput")
	proto.RegisterType((*MarkAsSuccessfulOutput)(nil), "hippoai.later.bolt.MarkAsSuccessfulOutput")
	proto.RegisterType((*MarkAsFailedInput)(nil), "hippoai.later.bolt.MarkAsFailedInput")
	proto.RegisterType((*MarkAsFailedOutput)(nil), "hippoai.later.bolt.MarkAsFailedOutput")
	proto.RegisterType((*SetPullTimeInput)(nil), "hippoai.later.bolt.SetPullTimeInput")
	proto.RegisterType((*SetPullTimeOutput)(nil), "hippoai.later.bolt.SetPullTimeOutput")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LaterBoltDB service

type LaterBoltDBClient interface {
	AbortInstance(ctx context.Context, in *AbortInstanceInput, opts ...grpc.CallOption) (*AbortInstanceOutput, error)
	CreateInstance(ctx context.Context, in *CreateInstanceInput, opts ...grpc.CallOption) (*CreateInstanceOutput, error)
	GetInstances(ctx context.Context, in *GetInstancesInput, opts ...grpc.CallOption) (*GetInstancesOutput, error)
	GetLastPullTime(ctx context.Context, in *GetLastPullTimeInput, opts ...grpc.CallOption) (*GetLastPullTimeOutput, error)
	MarkAsSuccessful(ctx context.Context, in *MarkAsSuccessfulInput, opts ...grpc.CallOption) (*MarkAsSuccessfulOutput, error)
	MarkAsFailed(ctx context.Context, in *MarkAsFailedInput, opts ...grpc.CallOption) (*MarkAsFailedOutput, error)
	SetPullTime(ctx context.Context, in *SetPullTimeInput, opts ...grpc.CallOption) (*SetPullTimeOutput, error)
}

type laterBoltDBClient struct {
	cc *grpc.ClientConn
}

func NewLaterBoltDBClient(cc *grpc.ClientConn) LaterBoltDBClient {
	return &laterBoltDBClient{cc}
}

func (c *laterBoltDBClient) AbortInstance(ctx context.Context, in *AbortInstanceInput, opts ...grpc.CallOption) (*AbortInstanceOutput, error) {
	out := new(AbortInstanceOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/AbortInstance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laterBoltDBClient) CreateInstance(ctx context.Context, in *CreateInstanceInput, opts ...grpc.CallOption) (*CreateInstanceOutput, error) {
	out := new(CreateInstanceOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/CreateInstance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laterBoltDBClient) GetInstances(ctx context.Context, in *GetInstancesInput, opts ...grpc.CallOption) (*GetInstancesOutput, error) {
	out := new(GetInstancesOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/GetInstances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laterBoltDBClient) GetLastPullTime(ctx context.Context, in *GetLastPullTimeInput, opts ...grpc.CallOption) (*GetLastPullTimeOutput, error) {
	out := new(GetLastPullTimeOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/GetLastPullTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laterBoltDBClient) MarkAsSuccessful(ctx context.Context, in *MarkAsSuccessfulInput, opts ...grpc.CallOption) (*MarkAsSuccessfulOutput, error) {
	out := new(MarkAsSuccessfulOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/MarkAsSuccessful", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laterBoltDBClient) MarkAsFailed(ctx context.Context, in *MarkAsFailedInput, opts ...grpc.CallOption) (*MarkAsFailedOutput, error) {
	out := new(MarkAsFailedOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/MarkAsFailed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laterBoltDBClient) SetPullTime(ctx context.Context, in *SetPullTimeInput, opts ...grpc.CallOption) (*SetPullTimeOutput, error) {
	out := new(SetPullTimeOutput)
	err := grpc.Invoke(ctx, "/hippoai.later.bolt.LaterBoltDB/SetPullTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LaterBoltDB service

type LaterBoltDBServer interface {
	AbortInstance(context.Context, *AbortInstanceInput) (*AbortInstanceOutput, error)
	CreateInstance(context.Context, *CreateInstanceInput) (*CreateInstanceOutput, error)
	GetInstances(context.Context, *GetInstancesInput) (*GetInstancesOutput, error)
	GetLastPullTime(context.Context, *GetLastPullTimeInput) (*GetLastPullTimeOutput, error)
	MarkAsSuccessful(context.Context, *MarkAsSuccessfulInput) (*MarkAsSuccessfulOutput, error)
	MarkAsFailed(context.Context, *MarkAsFailedInput) (*MarkAsFailedOutput, error)
	SetPullTime(context.Context, *SetPullTimeInput) (*SetPullTimeOutput, error)
}

func RegisterLaterBoltDBServer(s *grpc.Server, srv LaterBoltDBServer) {
	s.RegisterService(&_LaterBoltDB_serviceDesc, srv)
}

func _LaterBoltDB_AbortInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbortInstanceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).AbortInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/AbortInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).AbortInstance(ctx, req.(*AbortInstanceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaterBoltDB_CreateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInstanceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).CreateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/CreateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).CreateInstance(ctx, req.(*CreateInstanceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaterBoltDB_GetInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstancesInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).GetInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/GetInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).GetInstances(ctx, req.(*GetInstancesInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaterBoltDB_GetLastPullTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastPullTimeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).GetLastPullTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/GetLastPullTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).GetLastPullTime(ctx, req.(*GetLastPullTimeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaterBoltDB_MarkAsSuccessful_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkAsSuccessfulInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).MarkAsSuccessful(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/MarkAsSuccessful",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).MarkAsSuccessful(ctx, req.(*MarkAsSuccessfulInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaterBoltDB_MarkAsFailed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkAsFailedInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).MarkAsFailed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/MarkAsFailed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).MarkAsFailed(ctx, req.(*MarkAsFailedInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaterBoltDB_SetPullTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPullTimeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaterBoltDBServer).SetPullTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hippoai.later.bolt.LaterBoltDB/SetPullTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaterBoltDBServer).SetPullTime(ctx, req.(*SetPullTimeInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _LaterBoltDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hippoai.later.bolt.LaterBoltDB",
	HandlerType: (*LaterBoltDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AbortInstance",
			Handler:    _LaterBoltDB_AbortInstance_Handler,
		},
		{
			MethodName: "CreateInstance",
			Handler:    _LaterBoltDB_CreateInstance_Handler,
		},
		{
			MethodName: "GetInstances",
			Handler:    _LaterBoltDB_GetInstances_Handler,
		},
		{
			MethodName: "GetLastPullTime",
			Handler:    _LaterBoltDB_GetLastPullTime_Handler,
		},
		{
			MethodName: "MarkAsSuccessful",
			Handler:    _LaterBoltDB_MarkAsSuccessful_Handler,
		},
		{
			MethodName: "MarkAsFailed",
			Handler:    _LaterBoltDB_MarkAsFailed_Handler,
		},
		{
			MethodName: "SetPullTime",
			Handler:    _LaterBoltDB_SetPullTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "definition.proto",
}

func init() { proto.RegisterFile("definition.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 709 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x55, 0x5f, 0x4f, 0x13, 0x4f,
	0x14, 0xcd, 0xb6, 0xfc, 0x7e, 0xc2, 0x2d, 0x94, 0x32, 0x6d, 0xc9, 0xba, 0x10, 0xc0, 0x8d, 0x60,
	0xe5, 0xa1, 0x9b, 0xc0, 0x83, 0x09, 0x1a, 0x13, 0xd0, 0x48, 0x48, 0x50, 0xb1, 0x68, 0x4c, 0x7c,
	0xd9, 0x4c, 0xbb, 0x43, 0x99, 0xb0, 0xff, 0xb2, 0x33, 0x6b, 0x20, 0x31, 0xc6, 0xf8, 0x60, 0xe2,
	0x93, 0x0f, 0x7e, 0x34, 0xbf, 0x82, 0x1f, 0xc4, 0xec, 0xec, 0x2c, 0xdd, 0x3f, 0x63, 0x8a, 0x09,
	0x4f, 0xbb, 0xdc, 0x39, 0x73, 0xce, 0xb9, 0x77, 0xcf, 0xa5, 0xd0, 0x72, 0xc8, 0x19, 0xf5, 0x29,
	0xa7, 0x81, 0xdf, 0x0f, 0xa3, 0x80, 0x07, 0x08, 0x9d, 0xd3, 0x30, 0x0c, 0x30, 0xed, 0xbb, 0x98,
	0x93, 0xa8, 0x3f, 0x0c, 0x5c, 0x6e, 0xac, 0x8e, 0x83, 0x60, 0xec, 0x12, 0x0b, 0x87, 0xd4, 0xc2,
	0xbe, 0x1f, 0x70, 0x9c, 0x5c, 0x60, 0xe9, 0x0d, 0xf3, 0x33, 0xcc, 0x1e, 0xf9, 0x8c, 0x63, 0x7f,
	0x44, 0x50, 0x13, 0x6a, 0xd4, 0xd1, 0xb5, 0x0d, 0xad, 0x37, 0x37, 0xa8, 0x51, 0x07, 0xad, 0xc0,
	0x1c, 0xc7, 0xec, 0xc2, 0xf6, 0xb1, 0x47, 0xf4, 0x9a, 0x28, 0xcf, 0x26, 0x85, 0x57, 0xd8, 0x23,
	0x68, 0x13, 0x9a, 0xe4, 0x92, 0x8c, 0xe2, 0x84, 0xcc, 0xe6, 0xd4, 0x23, 0x7a, 0x5d, 0x20, 0x16,
	0xae, 0xab, 0x6f, 0xa9, 0x47, 0xd0, 0x1a, 0x40, 0x88, 0x23, 0xec, 0x11, 0x4e, 0x22, 0xa6, 0xcf,
	0x6c, 0x68, 0xbd, 0xf9, 0x41, 0xae, 0x62, 0xde, 0x83, 0xc6, 0xfb, 0x08, 0x87, 0x21, 0x71, 0x04,
	0x1c, 0xc1, 0x8c, 0xe0, 0x4a, 0x4d, 0x88, 0x77, 0x73, 0x00, 0x68, 0x7f, 0x18, 0x44, 0x3c, 0xf3,
	0x79, 0xe4, 0x87, 0x31, 0x2f, 0x9a, 0xd3, 0x4a, 0xe6, 0xd6, 0xa1, 0x41, 0x25, 0xda, 0xa6, 0x8e,
	0xf4, 0x0e, 0x59, 0xe9, 0xc8, 0x31, 0xbb, 0xd0, 0x2e, 0x70, 0xbe, 0x8e, 0x79, 0x18, 0x73, 0xf3,
	0x0a, 0xda, 0xcf, 0x22, 0x82, 0x39, 0xf9, 0x07, 0xad, 0xea, 0x20, 0x6a, 0xd3, 0x07, 0x51, 0xaf,
	0x0c, 0xe2, 0x11, 0x74, 0x8a, 0xd2, 0xa9, 0xa5, 0x72, 0x2b, 0x5a, 0xa5, 0x95, 0xc7, 0xb0, 0x74,
	0x48, 0xae, 0x1b, 0x61, 0xa9, 0xe3, 0x0e, 0xfc, 0xc7, 0x38, 0x8e, 0xb8, 0xc4, 0xa7, 0x7f, 0xa0,
	0x16, 0xd4, 0x89, 0x9f, 0x8d, 0x23, 0x79, 0x35, 0x4f, 0x00, 0xe5, 0x2f, 0x4b, 0xcd, 0x3d, 0x98,
	0xcb, 0x04, 0x98, 0xae, 0x6d, 0xd4, 0x7b, 0x8d, 0x9d, 0xd5, 0x7e, 0x35, 0x5a, 0xfd, 0xec, 0xde,
	0x60, 0x02, 0x37, 0x97, 0xa1, 0x73, 0x48, 0xf8, 0x31, 0x66, 0xfc, 0x24, 0x76, 0xdd, 0xa4, 0x75,
	0xe1, 0xc8, 0x3c, 0x86, 0x6e, 0xa9, 0x2e, 0xc5, 0x76, 0x73, 0x9f, 0xbc, 0xb1, 0xb3, 0xae, 0xd2,
	0xc9, 0x25, 0x44, 0x66, 0xe2, 0x1d, 0x74, 0x5f, 0xe2, 0xe8, 0x62, 0x9f, 0x9d, 0xc6, 0xa3, 0x11,
	0x61, 0xec, 0x2c, 0x76, 0x6f, 0x23, 0x16, 0x3a, 0x2c, 0x97, 0x69, 0x65, 0x32, 0xde, 0xc0, 0x52,
	0x7a, 0xf2, 0x02, 0x53, 0x97, 0x38, 0xb7, 0x21, 0xd6, 0x01, 0x94, 0xa7, 0x94, 0x42, 0x5b, 0xd0,
	0x3a, 0x25, 0xc5, 0xd9, 0x29, 0xb7, 0xa2, 0x0d, 0x4b, 0x39, 0x5c, 0x7a, 0x79, 0xe7, 0xc7, 0x1d,
	0x68, 0x1c, 0x27, 0x73, 0x3b, 0x08, 0x5c, 0xfe, 0xfc, 0x00, 0x7d, 0x82, 0x85, 0x42, 0xcc, 0xd1,
	0x96, 0x6a, 0xbc, 0xd5, 0xed, 0x32, 0x1e, 0x4c, 0xc5, 0x49, 0xbb, 0xc6, 0xd7, 0x5f, 0xbf, 0x7f,
	0xd6, 0x3a, 0xe6, 0xa2, 0x85, 0x93, 0x53, 0x3b, 0xeb, 0x6f, 0x4f, 0xdb, 0x46, 0x5f, 0x34, 0x68,
	0x16, 0x33, 0x8d, 0x94, 0xbc, 0x8a, 0x95, 0x33, 0x7a, 0xd3, 0x81, 0xd2, 0xc1, 0x8a, 0x70, 0xd0,
	0x35, 0x5b, 0xd6, 0x48, 0x1c, 0x17, 0x2c, 0x5c, 0xc2, 0x7c, 0x3e, 0xdf, 0x68, 0x53, 0x45, 0x5b,
	0x59, 0x1f, 0x63, 0x6b, 0x1a, 0x4c, 0x6a, 0xdf, 0x15, 0xda, 0x6d, 0xb3, 0x69, 0x8d, 0xc9, 0xa4,
	0x77, 0x96, 0x28, 0x7f, 0xd3, 0x60, 0xb1, 0x14, 0x78, 0xd4, 0xfb, 0x0b, 0x6d, 0x65, 0x5b, 0x8c,
	0x87, 0x37, 0x40, 0x4a, 0x0f, 0x6b, 0xc2, 0x83, 0x6e, 0xb6, 0x85, 0x07, 0x17, 0x33, 0x6e, 0x87,
	0xb1, 0xeb, 0x8a, 0x7f, 0x45, 0x89, 0x91, 0xef, 0x1a, 0xb4, 0xca, 0xa1, 0x46, 0x4a, 0x7e, 0xe5,
	0x46, 0x19, 0xdb, 0x37, 0x81, 0x56, 0xbc, 0x78, 0x38, 0xba, 0xb0, 0x31, 0xb3, 0xd9, 0x35, 0x24,
	0xf1, 0x72, 0x05, 0xf3, 0xf9, 0xc8, 0xab, 0x3f, 0x47, 0x65, 0xcf, 0xd4, 0x9f, 0x43, 0xb1, 0x3b,
	0x93, 0x30, 0x66, 0xf2, 0x67, 0xe2, 0x38, 0x91, 0x8e, 0xa1, 0x91, 0xdb, 0x17, 0x74, 0x5f, 0x45,
	0x59, 0x5e, 0x3c, 0x63, 0x73, 0x0a, 0xaa, 0x12, 0x03, 0x46, 0x8a, 0xd3, 0x3f, 0x78, 0xfa, 0xe1,
	0xc9, 0x98, 0xf2, 0xf3, 0x78, 0xd8, 0x1f, 0x05, 0x9e, 0x25, 0xd9, 0x2c, 0xc1, 0x66, 0x39, 0x43,
	0x66, 0x25, 0x8c, 0xce, 0x50, 0x3e, 0x6c, 0x1c, 0x86, 0x36, 0x23, 0xd1, 0x47, 0x12, 0x59, 0xb6,
	0xf8, 0x7d, 0x1e, 0xfe, 0x2f, 0x1e, 0xbb, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xcb, 0x92,
	0xf4, 0xec, 0x07, 0x00, 0x00,
}
